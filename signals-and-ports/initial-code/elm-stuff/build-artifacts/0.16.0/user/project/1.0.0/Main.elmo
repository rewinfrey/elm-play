Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values) return _elm.Main.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Char = Elm.Char.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Graphics$Element = Elm.Graphics.Element.make(_elm),
   $Keyboard = Elm.Keyboard.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $String = Elm.String.make(_elm);
   var _op = {};
   var view = function (model) {    return $Graphics$Element.show(model);};
   var update = F2(function ($char,model) {    return A2($Basics._op["++"],model,$String.fromChar($char));});
   var characters = A2($Signal.map,$Char.fromCode,$Keyboard.presses);
   var initialModel = "";
   var model = A3($Signal.foldp,update,initialModel,characters);
   var main = A2($Signal.map,view,model);
   return _elm.Main.values = {_op: _op,initialModel: initialModel,characters: characters,model: model,update: update,view: view,main: main};
};