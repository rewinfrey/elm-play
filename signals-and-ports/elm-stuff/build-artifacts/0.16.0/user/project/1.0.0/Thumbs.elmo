Elm.Thumbs = Elm.Thumbs || {};
Elm.Thumbs.make = function (_elm) {
   "use strict";
   _elm.Thumbs = _elm.Thumbs || {};
   if (_elm.Thumbs.values) return _elm.Thumbs.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $StartApp$Simple = Elm.StartApp.Simple.make(_elm);
   var _op = {};
   var update = F2(function (action,model) {
      var _p0 = action;
      switch (_p0.ctor)
      {case "NoOp": return model;
         case "Up": return _U.update(model,{ups: model.ups + 1});
         default: return _U.update(model,{downs: model.downs + 1});}
   });
   var Down = {ctor: "Down"};
   var Up = {ctor: "Up"};
   var view = F2(function (address,model) {
      return A2($Html.div,
      _U.list([]),
      _U.list([A2($Html.button,
              _U.list([A2($Html$Events.onClick,address,Down)]),
              _U.list([$Html.text(A2($Basics._op["++"],$Basics.toString(model.downs)," Thumbs Down"))]))
              ,A2($Html.button,
              _U.list([A2($Html$Events.onClick,address,Up)]),
              _U.list([$Html.text(A2($Basics._op["++"],$Basics.toString(model.ups)," Thumbs Up"))]))
              ,A2($Html.p,_U.list([]),_U.list([$Html.text($Basics.toString(model))]))]));
   });
   var NoOp = {ctor: "NoOp"};
   var initialModel = {ups: 0,downs: 0};
   var main = $StartApp$Simple.start({model: initialModel,view: view,update: update});
   var Model = F2(function (a,b) {    return {ups: a,downs: b};});
   return _elm.Thumbs.values = {_op: _op,Model: Model,initialModel: initialModel,NoOp: NoOp,Up: Up,Down: Down,update: update,view: view,main: main};
};